# -*- coding: utf-8 -*-
"""Porous_Aluminum_Plots.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oxxB0N4x43oGM5mz_7Ro52C29uv7BpEU
"""

----Strength vs. Porosity with Model Prediction (Core Relationship)

import numpy as np, matplotlib.pyplot as plt, pandas as pd
from sklearn.ensemble import RandomForestRegressor

data = pd.DataFrame({
    'Al': [90,87,80,77,70,67,60,57],
    'NaCl': [10,10,20,20,30,30,40,40],
    'Corn': [0,3,0,3,0,3,0,3],
    'Porosity': [4.23,7.45,13.61,17.3,15.46,21.95,19.19,31.45],
    'Strength': [60.37,39.21,56.88,34.24,40.45,25.35,27.83,4.45]
})

X = data[['Porosity']]; y = data['Strength']
rf = RandomForestRegressor(n_estimators=500, random_state=42).fit(X, y)

# smooth curve
por_range = np.linspace(4,32,200)
y_pred = rf.predict(pd.DataFrame({'Porosity':por_range}))

plt.figure(figsize=(7,5))
plt.scatter(data['Porosity'], data['Strength'], color='red', label='Experimental Data')
plt.plot(por_range, y_pred, color='blue', linewidth=2, label='ML Predicted Trend')
plt.xlabel('Porosity (%)'); plt.ylabel('Compressive Strength (MPa)')
plt.title('Relationship Between Porosity and Compressive Strength')
plt.legend(); plt.grid(True); plt.show()

import seaborn as sns
rf = RandomForestRegressor(n_estimators=1000, random_state=42).fit(
    data[['Al','NaCl','Corn','Porosity']], data['Strength'])
sns.barplot(x=['Al','NaCl','Corn','Porosity'], y=rf.feature_importances_, palette='viridis')
plt.title('Feature Importance from ML Model'); plt.ylabel('Relative Importance'); plt.show()

# Randomized optimization results reuse
import numpy as np
Al_rand = np.random.uniform(55,90,5000)
NaCl_rand = np.random.uniform(10,40,5000)
Corn_rand = np.random.uniform(0,3,5000)
Por_rand = np.random.uniform(4,32,5000)

params = pd.DataFrame({'Al':Al_rand,'NaCl':NaCl_rand,'Corn':Corn_rand,'Porosity':Por_rand})
rf = RandomForestRegressor(n_estimators=1000, random_state=42).fit(data[['Al','NaCl','Corn','Porosity']], data['Strength'])
params['Pred_Strength'] = rf.predict(params)

plt.figure(figsize=(7,5))
plt.scatter(params['Porosity'], params['Pred_Strength'], s=10, alpha=0.3, c='grey', label='Predicted Combinations')
plt.scatter(5.39,56.19, color='gold', edgecolor='black', s=150, marker='*', label='Optimized Point')
plt.xlabel('Porosity (%)'); plt.ylabel('Predicted Strength (MPa)')
plt.title('Pareto Trade-Off: Porosity vs. Strength')
plt.legend(); plt.grid(True); plt.show()